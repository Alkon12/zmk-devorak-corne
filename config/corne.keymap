/*
 * Copyright (c) 2024 Your Name
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define SYM 2
#define FUNC 3
#define EXTRA 4

/ {
    behaviors {
        // Tap dance for Tab/Escape
        td_tab: tap_dance_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TAB>, <&kp ESC>;
        };

        // Modifier tap for Left Shift / Caps Lock
        mt_lsft: mod_tap_lsft {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LSFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
    &td_tab    &kp QUOT  &kp COMMA &kp DOT   &kp P     &kp Y         &kp F     &kp G     &kp C     &kp R     &kp L     &kp BSPC
    &mt_lsft LSHIFT CAPS  &kp A     &kp O     &kp E     &kp U     &kp I         &kp D     &kp H     &kp T     &kp N     &kp S     &kp DEL
    &kp LCTRL  &kp SEMI  &kp Q     &kp J     &kp K     &kp X         &kp B     &kp M     &kp W     &kp V     &kp Z     &lt 4 ESC
                         &kp LGUI  &mo 1     &kp SPACE                         &kp SPACE &lt 2 ENTER &kp LALT
            >;
        };

        nav_layer {
            bindings = <
    &trans     &none     &none     &kp UP    &none     &none         &kp PLUS   &kp N1    &kp N2    &kp N3    &kp MINUS &kp BSPC
    &kp LSHFT  &none     &kp LEFT  &kp DOWN  &kp RIGHT &none         &kp ASTRK  &kp N4    &kp N5    &kp N6    &kp FSLH  &none
    &kp LCTRL  &none     &none     &none     &none     &none         &none      &kp N7    &kp N8    &kp N9    &kp N0    &none
                                   &kp LGUI  &trans    &kp SPACE                &kp ENTER &mo 3     &kp LALT
            >;
        };

        sym_layer {
            bindings = <
    &trans     &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT     &kp CARET  &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR  &kp BSPC
    &kp LSHFT  &none     &none     &none     &none     &kp FSLH      &kp MINUS  &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
    &kp LCTRL  &none     &none     &none     &none     &kp QMARK     &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                   &kp LGUI  &mo 3     &kp SPACE                &kp ENTER &trans    &kp LALT
            >;
        };

        func_layer {
            bindings = <
    &bootloader &none     &none     &none     &none     &none         &none      &none     &none     &none     &none     &none
    &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none      &none     &none     &none     &none     &none
    &trans      &none     &none     &none     &none     &none         &none      &none     &none     &none     &none     &none
                                    &kp LGUI  &trans    &kp SPACE                &kp ENTER &trans    &kp LALT
            >;
        };

        extra_layer {
            bindings = <
    &none      &none     &none     &none     &none     &none         &none      &none     &none     &none     &none     &none
    &none      &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N4) &none     &none      &none     &none     &none     &none     &none
    &none      &kp LG(N5) &kp LG(N6) &kp LG(N7) &kp LG(N8) &none     &none      &none     &none     &none     &none     &none
                                    &kp LGUI  &mo 5     &kp SPACE                &kp ENTER &trans    &kp LALT
            >;
        };

        extra_macro_layer {
            bindings = <
    &none      &none     &none     &none     &none     &none         &none      &none     &none     &none     &none     &none
    &none      &kp LG(LS(N1)) &kp LG(LS(N2)) &kp LG(LS(N3)) &kp LG(LS(N4)) &none  &none      &none     &none     &none     &none     &none
    &none      &kp LG(LS(N5)) &kp LG(LS(N6)) &kp LG(LS(N7)) &kp LG(LS(N8)) &none  &none      &none     &none     &none     &none     &none
                                    &kp LGUI  &trans    &kp SPACE                &kp ENTER &trans    &kp LALT
            >;
        };
    };
};
